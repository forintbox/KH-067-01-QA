swagger: '2.0'
info:
  description: >-
    This is our group KH-067-01-QA demo project for testing API [rabota.ua](https://rabota.ua). For this demo project you can use the api key `bearer-token` to test the API.
  version: v1
  title: Rabota.UA Web Api
host: api.rabota.ua
schemes:
  - https
paths:
  /account/photo:
    get:
      tags:
        - Account
      summary: Upload the photo to the account
      operationId: AccountJobsearchRegister_Photo
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: string
  /account/login:
    get:
      tags:
        - Account
      summary: Get Login
      operationId: Account_Get
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserModel'
    post:
      tags:
        - Account
      summary: Authorization request
      operationId: Account_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginUserModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: NoContent
        '400':
          description: BadRequest
          schema:
            type: string
  /account/autologin-email:
    get:
      tags:
        - Account
      summary: Autologin via email
      operationId: Account_SendEmailWithAutoLoginLink
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: email
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/logout:
    post:
      tags:
        - Account
      summary: Logs out current logged in user session
      operationId: Account_Logout
      consumes: []
      produces: []
      responses:
        '204':
          description: No Content
  /account/userinfo:
    put:
      tags:
        - Account
      summary: Update information about user
      operationId: Account_ChangeUserInfo
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: userInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserInfo'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/password/reason/changed:
    put:
      tags:
        - Account
      summary: Change the password
      operationId: Account_ChangePassword
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordUserModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/password/recovery-email/{email}:
    post:
      tags:
        - Account
      summary: Sends letter to specified email with url to password change page.
      operationId: Account_SendPasswordRecoveryKeyToEmail
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: email
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/password/reason/forgotten-email:
    put:
      tags:
        - Account
      summary: >-
        Updates password for email that is extracted from passed "password
        recovery key".
      operationId: Account_ChangePasswordByEmail
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordChangeViaEmail'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/password/recovery-phone:
    post:
      tags:
        - Account
      summary: Password recovery via phone
      operationId: Account_SendPasswordRecoveryCodeToPhone
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: phone
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/password/recovery-phone/code-validation:
    get:
      tags:
        - Account
      summary: >-
        Validates code for specified phone. Allowed number of attempts: 10.
        After, code will be not valid anymore.
      operationId: Account_ValidatePhoneCode
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: phone
          in: query
          required: true
          type: string
        - name: code
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/password/reason/forgotten-phone:
    put:
      tags:
        - Account
      summary: Changes password of user account with phone (if provided code is valid)
      operationId: Account_ChangePasswordByPhone
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordChangeViaPhone'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/jobsearch/register:
    post:
      tags:
        - Account Jobsearcher
      summary: Register user by email or phone
      operationId: AccountJobsearchRegister_Register
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: model
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/RegisterAccountModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/jobsearch/email:
    get:
      tags:
        - Account Jobsearcher
      summary: >-
        Updates email for user profile that is extracted using "email change
        key".
      operationId: AccountJobsearchRegister_ConfirmEmailChange
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: key
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
    post:
      tags:
        - Account Jobsearcher
      summary: >-
        Sends letter to specified email with url for email change confirmation.
        Key is valid for 72 hours.
      operationId: AccountJobsearchRegister_SendEmailChangeKey
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/EmailChangeRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/jobseeker/{notebookId}/resumeviewscount:
    get:
      tags:
        - Account Jobsearcher
      summary: Shows count of resumes user
      operationId: VacancyJobsearcher_GetResumeViewsCount
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: notebookId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /account/jobsearch/recommended:
    post:
      tags:
        - Account Jobsearcher
      summary: Recommends vacancies for user based on his city and keywords
      operationId: VacancyJobsearcher_GetRecommended
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: start
          in: query
          description: From which vacancy number return recommendation list
          required: false
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
        - name: count
          in: query
          description: >-
            How many vacancies to take from the top of the recommendation result
            list
          required: false
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
        - name: guid
          in: query
          description: "User id (if not specified, than current user id is taken).\r\nBased on this, City and KeyWords are taken for search."
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacancySearchResponse'
  /account/jobsearch/cvview:
    get:
      tags:
        - Account Jobsearcher
      summary: Job Search by number CV
      operationId: VacancyJobsearcher_CvView
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: start
          in: query
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          required: false
          type: integer
          format: int32
        - name: cvId
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResumeViewResponse'
  /account/jobsearch/vacancy_pool:
    get:
      tags:
        - Account Jobsearcher
      summary: >-
        Returns salary wishes based on city and position. If vacancyId is
        specified, then for a single vacancy
      operationId: VacancyJobsearcher_VacancyPool
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: pzId
          in: query
          required: true
          type: integer
          format: int32
        - name: cityId
          in: query
          required: true
          type: integer
          format: int32
        - name: vacancyId
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WishesPoolResult'
  /account/jobsearch/cvlist:
    post:
      tags:
        - Account Jobsearcher
      summary: Returns more extended info about jobseeker prof-resumes list for \"My resumes\" page
      operationId: Apply_CvList
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ResumeListItemDTO'
  /account/jobsearch/attachlist:
    get:
      tags:
        - Account Jobsearcher
      summary: LIst of attached files
      operationId: GetAttachList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: email
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttachInfo'
  /account/jobsearch/activeperiod:
    get:
      tags:
        - Account Jobsearcher
      summary: >-
        Returns active period info for specified user uid (from EmailSource
        table)
      operationId: Apply_GetActivePeriodInfo
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: uid
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActivePeriodInfo'
  /account/jobsearch/email-settings/alert-subscriptions:
    get:
      tags:
        - Account Jobsearcher
      summary: >-
        Get status-list of vacancy mailing-topics created by hand or after apply
        that are sent on email.
      operationId: EmailSubscriptionSettings_GetVacancyMailings
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: isCreatedManually
          in: query
          required: true
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VacancyMailingSubscription'
  /account/jobsearch/email-settings/alert-subscriptions/count:
    get:
      tags:
        - Account Jobsearcher
      summary: >-
        Counts vacancy mailing-topics created by hand or after apply that are
        sent on email.
      operationId: EmailSubscriptionSettings_CountVacancyMailings
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: isCreatedManually
          in: query
          required: true
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /account/jobsearch/email-settings/alert-subscriptions/{id}/status/{isActive}:
    put:
      tags:
        - Account Jobsearcher
      summary: Enables/disables vacancy email subscription by id
      operationId: EmailSubscriptionSettings_ToggleVacancySubscription
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: isActive
          in: path
          required: true
          type: boolean
      responses:
        '204':
          description: No Content
  /account/jobsearch/email-settings/alert-subscriptions/all-manual/status/{isActive}:
    put:
      tags:
        - Account Jobsearcher
      summary: Enables/disables vacancy all email subscriptions created by hand
      operationId: EmailSubscriptionSettings_ToggleAllManualVacancySubscription
      consumes: []
      produces: []
      parameters:
        - name: isActive
          in: path
          required: true
          type: boolean
      responses:
        '204':
          description: No Content
  /account/jobsearch/email-settings/alert-subscriptions/all-automatic/status/{isActive}:
    put:
      tags:
        - Account Jobsearcher
      summary: >-
        Enables/disables all vacancy email subscriptions created automatically
        after apply
      operationId: EmailSubscriptionSettings_ToggleAllAutomaticVacancySubscription
      consumes: []
      produces: []
      parameters:
        - name: isActive
          in: path
          required: true
          type: boolean
      responses:
        '204':
          description: No Content
  /account/jobsearch/email-settings/notification-subscriptions:
    get:
      tags:
        - Account Jobsearcher
      summary: Get status-list of notification mailing-topics that are sent on email
      operationId: EmailSubscriptionSettings_GetNotificationMailingSubscriptions
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationMailingSubscription'
  /account/jobsearch/email-settings/notification-subscriptions/type/{type}/status/{isActive}:
    put:
      tags:
        - Account Jobsearcher
      summary: >-
        Enables/disables notification mailing subscription that defines whether
        this specific topic mailing will be send on email
      operationId: EmailSubscriptionSettings_ChangeNotificationMailingSubscription
      consumes: []
      produces: []
      parameters:
        - name: type
          in: path
          description: notification content type
          required: true
          type: string
          enum:
            - BestArticlesFromBlogRabotaUa
            - DigestFromBlogRabotaUa
            - LettersFromPartners
            - NewsInMyProfession
            - ResumeViewNotification
            - ResumeViewsStatistics
            - WeeklyRecommendedVacanciesDigest
            - BestPropositionsOnMarket
            - VacanciesThatAreGoingToBeClosed
            - RelevanceOfViewedVacancies
            - SelectedVacanciesWithoutApply
            - ClosingVacanciesWithYourApplies
        - name: isActive
          in: path
          required: true
          type: boolean
      responses:
        '204':
          description: No Content
  /account/jobsearch/email-settings/language:
    get:
      tags:
        - Account Jobsearcher
      summary: "Gets mailing language for current user.\r\nRussian = 1, Ukrainian = 3"
      operationId: EmailSubscriptionSettings_GetMailingLanguage
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            enum:
              - Russian
              - Ukrainian
            type: string
  /account/jobsearch/email-settings/language/{language}:
    put:
      tags:
        - Account Jobsearcher
      summary: Updates mailing language for current user.
      operationId: EmailSubscriptionSettings_UpdateMailingLanguage
      consumes: []
      produces: []
      parameters:
        - name: language
          in: path
          required: true
          type: string
          enum:
            - Russian
            - Ukrainian
      responses:
        '204':
          description: No Content
  /account/jobsearch/alert:
    get:
      tags:
        - Account Jobsearcher
      summary: Gets alert-subscriptions
      operationId: JobsearcherAlert_Get
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AlertInfo'
  /account/jobsearch/alert-subscription:
    get:
      tags:
        - Account Jobsearcher
      summary: "Checks whether user has alert-subscription with specified cityId and keyword (exact matching).\r\nSearch is performed over all (active/non-active) subscriptions"
      operationId: JobsearcherAlert_DoesUserHasSubscription
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: cityId
          in: query
          required: true
          type: integer
          format: int32
        - name: keywords
          in: query
          required: false
          type: string
        - name: rubricId
          in: query
          required: false
          type: integer
          format: int32
        - name: email
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
    put:
      tags:
        - Account Jobsearcher
      operationId: JobsearcherAlert_UpdateSubscription
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: alertUpdateInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/AlertUpdateInfo'
      responses:
        '200':
          description: OK
          schema:
            type: object
    delete:
      tags:
        - Account Jobsearcher
      operationId: JobsearcherAlert_UnsubscribeUser
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: cityId
          in: query
          required: true
          type: integer
          format: int32
        - name: keywords
          in: query
          required: true
          type: string
        - name: email
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/jobsearch/alert-subscription/{id}:
    get:
      tags:
        - Account Jobsearcher
      summary: "Get subscription info with keywords by subscription id. \r\n'keywords' in response = keywords and tags separated with ','"
      operationId: JobsearcherAlert_GetSubscriptionById
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubscribeCompetitorInfo'
    delete:
      tags:
        - Account Jobsearcher
      operationId: JobsearcherAlert_UnsubscribeUserBySubscriptionId
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
  /account/jobsearch/alert-subscription-vacancies/{id}:
    get:
      tags:
        - Account Jobsearcher
      summary: "Redirect to /vacancy/search with parameters of alert-subscription with this {id}.\r\nPagination is available. Default: page = 0, count = 20."
      operationId: JobsearcherAlert_RedirectToSearchBySubscriptionId
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacancySearchUserResponse'
  /account/jobsearch/alert-subscription/company:
    get:
      tags:
        - Account Jobsearcher
      summary: "Checks whether user has alert-subscription on the company with this cityId and rubricId.\r\nSearch is performed over all (active/non-active) subscriptions"
      operationId: JobsearcherAlert_DoesUserHasSubscriptionOnCompany
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: companyId
          in: query
          required: true
          type: integer
          format: int32
        - name: cityId
          in: query
          required: true
          type: integer
          format: int32
        - name: rubricId
          in: query
          required: true
          type: integer
          format: int32
        - name: email
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /company/{id}:
    get:
      tags:
        - Company
      summary: Get information about company-employer
      operationId: Company_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompanyInfo'
  /companies:
    get:
      tags:
        - Company
      operationId: Company_GetCompaniesInRubric
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: rubricId
          in: query
          required: false
          type: integer
          format: int32
        - name: keyword
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyInRubricDto'
  /companies/filter:
    get:
      tags:
        - Company
      operationId: Company_GetFilteredCompanies
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: request.firstLetter
          in: query
          required: false
          type: string
        - name: request.branchIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: request.limit
          in: query
          required: false
          type: integer
          format: int32
        - name: request.offset
          in: query
          required: false
          type: integer
          format: int32
        - name: request.onlyWithPublishedVacancies
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FilteredCompanies'
  /companies/vip:
    get:
      tags:
        - Company
      operationId: Company_GetVipCompanies
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: channels
          in: query
          required: true
          type: array
          items:
            type: string
            enum:
              - None
              - FinanceBank
              - FinanceInvest
              - FinanceInsurance
              - FinanceMain
              - ITMain
              - PharmaMain
              - PharmaSecond
              - StudentMain
              - StudentCareer
              - StudentJob
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyVipInfo'
  /companies/count:
    get:
      tags:
        - Company
      operationId: Company_GetPublishedCompanyCount
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /company/{id}/track:
    post:
      tags:
        - Company
      operationId: Company_TrackCompanyView
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /dictionary/activitylevel:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetActivityLevels
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/additional:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetAdditional
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceLocalized'
  /dictionary/branch:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetBranch
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/spheres:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetSpheres
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/city:
    get:
      tags:
        - Dictionary
      summary: Check city id
      operationId: Dictionary_GetCity
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CityDataLocalized'
  /dictionary/cities-with-regions:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetCitiesWithRegions
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CityDataLocalized'
  /dictionary/districts:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetDistrictsFor
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: cityId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/metro:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetMetroFor
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: cityId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MetroBranchDataLocalized'
  /dictionary/currency:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetCurrency
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/education:
    get:
      tags:
        - Dictionary
      summary: Check education id
      operationId: Dictionary_GetEducation
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/fillingTypes:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetFillingTypes
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/experience:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetExperience
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/cvdb-experience:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetCvDbExperience
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/gender:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetGender
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/resource:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetResource
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/ResourceLocalized'
  /dictionary/rubric:
    get:
      tags:
        - Dictionary
      summary: Receive information about Rubric
      operationId: Dictionary_GetRubric
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/subrubric:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetSubRubric
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/schedule:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetSchedule
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/statusapplication/experience:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetExperienceStatus
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/statusapplication/salary:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetSalaryStatus
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/zapros:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetZapros
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: ukrainian
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
  /dictionary/vacancystate:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetVacancyState
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: object
  /dictionary/language/skill:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetLanguageSkill
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/language:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetLanguage
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LanguageDataLocalized'
  /dictionary/regions:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetRegions
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataLocalized'
  /dictionary/keywords:
    get:
      tags:
        - Dictionary
      operationId: Dictionary_GetKeywords
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
  /dictionary/popular-tags:
    get:
      tags:
        - Dictionary
      summary: Receive information about Popular Tags
      operationId: Dictionary_GetPopularTags
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PopularTagInfo'
  /city:
    get:
      tags:
        - Location
      operationId: Location_GetCityIdByIp
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /resume/{resumeId}/education:
    post:
      tags:
        - Resume
      operationId: ResumeEducation_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/EducationInfoDTO'
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /resume/{resumeId}/education/{educationId}:
    delete:
      tags:
        - Resume
      operationId: ResumeEducation_Delete
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: educationId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /resume/{resumeId}/state:
    get:
      tags:
        - Resume
      operationId: ResumeState_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CvStateInfo'
    post:
      tags:
        - Resume
      operationId: ResumeState_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CvStateInfo'
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/searchstate:
    post:
      tags:
        - Resume
      operationId: ResumeState_PostSearchState
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: state
          in: query
          required: true
          type: string
          enum:
            - None
            - Active
            - NowWorking
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/personal:
    post:
      tags:
        - Resume
      operationId: ResumePersonal_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonalInfoDTO'
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/language:
    post:
      tags:
        - Resume
      summary: Filling  about user language data in the  Resume profile user
      operationId: ResumeLanguage_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LanguageAbilityInfoDTO'
      responses:
        '204':
          description: No Content
    delete:
      tags:
        - Resume
      operationId: ResumeLanguage_Delete
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/position:
    post:
      tags:
        - Resume
      operationId: ResumePosition_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PositionInfoDTO'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /resume/{resumeId}/experience:
    post:
      tags:
        - Resume
      operationId: ResumeExperience_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExperienceInfoDTO'
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
    delete:
      tags:
        - Resume
      operationId: ResumeExperience_Delete
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /resume:
    get:
      tags:
        - Resume
      summary: Returns short info about jobseeker prof-resumes list for "Apply" page.
      operationId: Resume_GetJobseekerResumeList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: notebookId
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ResumeShortListItemDTO'
    post:
      tags:
        - Resume
      operationId: Resume_CreateBlankResume
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResumeShortInfoDto'
  /resume/{resumeId}:
    get:
      tags:
        - Resume
      operationId: Resume_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResumeModel'
    delete:
      tags:
        - Resume
      operationId: Resume_Delete
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/copy:
    post:
      tags:
        - Resume
      operationId: Resume_Copy
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
  /resume/{resumeId}/confirmemail:
    post:
      tags:
        - Resume
      operationId: Resume_ConfirmResumeEmail
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: boolean
  /resume/{resumeId}/skill:
    post:
      tags:
        - Resume
      operationId: ResumeSkill_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SkillInfoDTO'
      responses:
        '204':
          description: No Content
    delete:
      tags:
        - Resume
      operationId: ResumeSkill_Delete
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/training:
    post:
      tags:
        - Resume
      summary: Filling  about user training data in the Resume profile user
      operationId: ResumeTraining_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TrainingInfoDTO'
      responses:
        '200':
          description: OK
          schema:
            type: object
  /resume/{resumeId}/training/{trainingId}:
    delete:
      tags:
        - Resume
      operationId: ResumeTraining_Delete
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: trainingId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/additional:
    post:
      tags:
        - Resume
      operationId: ResumeAdditional_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdditionalInfoDTO'
      responses:
        '200':
          description: OK
          schema:
            format: int32
            type: integer
  /resume/{resumeId}/photo:
    post:
      tags:
        - Resume
      summary: Add/change photo in CV
      operationId: ResumePhoto_UploadResumePhoto
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
        - multipart/form-data
        - application/octet-stream
        - application/octet
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: photo
          in: formData
          description: upload file
          required: true
          type: file
      responses:
        '200':
          description: OK
          schema:
            type: string
    delete:
      tags:
        - Resume
      summary: Delete photo from CV
      operationId: ResumePhoto_Delete
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/photobyname:
    post:
      tags:
        - Resume
      operationId: ResumePhoto_AddResumePhotoName
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: photoName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /resume/{resumeId}/contact:
    post:
      tags:
        - Resume
      operationId: ResumeContact_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ContactInfoDTO'
      responses:
        '204':
          description: No Content
  /resume/{resumeId}/diiacertificate:
    post:
      tags:
        - Resume
      operationId: ResumeDiiaCertificate_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiiaCertificateInfoDTO'
      responses:
        '200':
          description: OK
          schema:
            type: object
    delete:
      tags:
        - Resume
      operationId: ResumeDiiaCertificate_Delete
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
  /resume/{resumeId}/uilanguage:
    post:
      tags:
        - Resume
      operationId: ResumeUiLanguage_Post
      consumes: []
      produces: []
      parameters:
        - name: resumeId
          in: path
          required: true
          type: integer
          format: int32
        - name: language
          in: query
          required: true
          type: string
          enum:
            - None
            - Russian
            - English
            - Ukrainian
      responses:
        '204':
          description: No Content
  /vacancy/search:
    get:
      tags:
        - Vacancy
      summary: Search for jobs by specified filters and parameters
      operationId: VacancySearch
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: uid
          in: query
          required: false
          type: integer
          format: int32
        - name: cid
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          required: false
          type: integer
          format: int32
        - name: ukrainian
          in: query
          required: false
          type: boolean
        - name: cityId
          in: query
          required: false
          type: integer
          format: int32
        - name: metroIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: districtIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: parentId
          in: query
          required: false
          type: integer
          format: int32
        - name: rubricIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: keyWords
          in: query
          required: false
          type: string
        - name: additionalKeywords
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: salary
          in: query
          required: false
          type: integer
          format: int32
        - name: noSalary
          in: query
          required: false
          type: boolean
        - name: showAgency
          in: query
          required: false
          type: boolean
        - name: lastViewDate
          in: query
          required: false
          type: boolean
        - name: scheduleId
          in: query
          required: false
          type: integer
          format: int32
        - name: profLevelIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: isSynonym
          in: query
          required: false
          type: boolean
        - name: period
          in: query
          required: false
          type: integer
          format: int32
        - name: nearRegions
          in: query
          required: false
          type: boolean
        - name: searchMode
          in: query
          required: false
          type: integer
          format: int32
        - name: sortBy
          in: query
          required: false
          type: string
          enum:
            - Date
            - Geo
        - name: latitude
          in: query
          required: false
          type: number
          format: double
        - name: longitude
          in: query
          required: false
          type: number
          format: double
        - name: viewedVacancyIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacancySearchUserResponse'
  /vacancy:
    get:
      tags:
        - Vacancy
      summary: Job Search by ID
      operationId: VacancySearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: query
          required: false
          type: integer
          format: int32
        - name: ukrainian
          in: query
          required: false
          type: boolean
        - name: isFromElasticSearch
          in: query
          required: false
          type: boolean
        - name: cid
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacancyFullDto'
        '404':
          description: NotFound
          schema:
            type: string
  /vacancy/questions:
    get:
      tags:
        - Vacancy
      operationId: VacancySearch_GetCQ
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/QuestionInfo'
  /vacancy/tags:
    get:
      tags:
        - Vacancy
      operationId: VacancySearch_GetVacancyTags
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SynonymousInfo'
  /vacancy/cities:
    get:
      tags:
        - Vacancy
      operationId: VacancySearch_GetVacancyCities
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CityInfo'
  /vacancy/count:
    get:
      tags:
        - Vacancy
      operationId: VacancySearch_GetVacanciesCount
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            format: int64
            type: integer
  /vacancy/apply:
    post:
      tags:
        - Vacancy
      summary: Does job apply using created CV on web-site
      operationId: VacancyApply_Apply
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: model
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/ApplyModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplyResponse'
  /vacancy/nocvapply:
    post:
      tags:
        - Vacancy
      operationId: VacancyApply_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/NoCvApplyRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NoCvApplyResponse'
  /vacancy/applyclick:
    post:
      tags:
        - Vacancy
      operationId: VacancyApply_ApplyClick
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
  /vacancy/vacancyview:
    post:
      tags:
        - Vacancy
      operationId: VacancyApply_VacancyView
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          format: int32
        - name: notebookId
          in: query
          required: false
          type: integer
          format: int32
        - name: email
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /vacancy/phoneclick:
    post:
      tags:
        - Vacancy
      summary: >-
        Captures click on the phone in vacancy description and platfrom from
        which it was made
      operationId: VacancyApply_PhoneClick
      consumes: []
      produces: []
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /vacancy/linkclick/{vacancyId}:
    post:
      tags:
        - Vacancy
      summary: >-
        Captures click on the link in vacancy description and platfrom from
        which it was made
      operationId: VacancyApply_LinkClick
      consumes: []
      produces: []
      parameters:
        - name: vacancyId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
  /vacancy/similar:
    post:
      tags:
        - Vacancy
      operationId: VacancySimilar_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimilarVacanciesRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SimilarVacanciesResponse'
  /vacancy/similar2:
    post:
      tags:
        - Vacancy
      operationId: VacancySimilar_Post2
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimilarVacanciesRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SimilarVacanciesResponse'
definitions:
  RequestText:
    type: object
    properties:
      id:
        format: int32
        type: integer
      requestId:
        format: int32
        type: integer
      byUser:
        type: boolean
      hide:
        type: boolean
      sentToUser:
        type: boolean
      email:
        type: string
      text:
        type: string
      avatar:
        type: string
      addDate:
        format: date-time
        type: string
  UserModel:
    description: "TODO: For some reason model description is not displayed as shown here\r\nhttp://wmpratt.com/swagger-and-asp-net-web-api-part-1/\r\nMaybe we can fix it."
    required:
      - username
    type: object
    properties:
      uid:
        format: int32
        description: >-
          Is assigned when user enters its email first time (in DB it is called
          "EmailID", from table EmailSource)
        type: integer
      username:
        type: string
      remember:
        type: boolean
      jobsearcher:
        type: boolean
      notebookId:
        format: int32
        type: integer
      multiUserId:
        format: int32
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      stateId:
        enum:
          - New
          - ExpectationOfActivation
          - NotActivated
          - BlackList
          - Validated
          - Undefined
          - Mega
        type: string
  LoginUserModel:
    description: Used only for login("POST") purpose by clients
    required:
      - password
    type: object
    properties:
      username:
        type: string
      phone:
        type: string
      password:
        type: string
      remember:
        type: boolean
  NewEmailInfo:
    required:
      - email
      - source
    type: object
    properties:
      email:
        type: string
      source:
        enum:
          - GoogleOrganic
          - YandexOrganic
          - JoobleCpc
          - GoogleCpc
          - YandexCpc
          - RabotaYandexReferral
          - UkrNetReferral
          - ContextCpc
          - TrudcomCpc
          - Direct
          - Other
          - MailruOrganic
          - Jobalert
          - JoobleCv
          - Facebook
          - Vkontakte
          - GoogleDisplay
          - CareerJet
          - GoogleSearch
          - Jobrapido
          - Hotwork
          - Emailing
          - Primelead
          - Salesdoubler
          - Trovit
          - Jobrecommendation
          - News
          - Jobukrnet
          - Daydjest
          - Rtbhouse
          - Jobalert_company
          - Trudman
          - Jobiuscomua
          - Actionpay
          - blograbotaua
          - TargetMail
          - Mediatraffic
          - Popunder
          - indeed
          - Sociomantic
          - CitySites
          - ThePoint
          - HrSovet
        type: string
  UserInfo:
    required:
      - name
      - surname
    type: object
    properties:
      name:
        type: string
      surname:
        type: string
  PasswordUserModel:
    required:
      - oldPassword
      - newPassword
    type: object
    properties:
      oldPassword:
        type: string
      newPassword:
        type: string
  PasswordChangeViaEmail:
    type: object
    properties:
      key:
        type: string
      newPassword:
        type: string
  PasswordChangeViaPhone:
    type: object
    properties:
      code:
        type: string
      phone:
        type: string
      newPassword:
        type: string
  VacancyQuestion:
    required:
      - userName
      - phone
      - question
    type: object
    properties:
      userName:
        type: string
      phone:
        type: string
      question:
        type: string
      userEmail:
        type: string
  RegisterAccountModel:
    required:
      - password
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
      googleClientId:
        description: >-
          For SPA, Cid can be taken from cookie, but from apps pseudo-cid has to
          be passed
        type: string
      password:
        maxLength: 255
        minLength: 0
        type: string
  EmailChangeRequest:
    required:
      - password
    type: object
    properties:
      newEmail:
        type: string
      password:
        type: string
  VacancySearchResponse:
    type: object
    properties:
      took:
        format: int32
        type: integer
      start:
        format: int32
        type: integer
      count:
        format: int32
        type: integer
      total:
        format: int64
        type: integer
      hasGeoCount:
        format: int32
        type: integer
      errorMessage:
        type: string
      documents:
        type: array
        items:
          $ref: '#/definitions/VacancyResultItem'
  VacancyResultItem:
    type: object
    properties:
      id:
        format: int32
        type: integer
      notebookId:
        format: int32
        type: integer
      name:
        type: string
      cityName:
        type: string
      cityId:
        format: int32
        type: integer
      districtId:
        format: int32
        type: integer
      districtName:
        type: string
      metroId:
        format: int32
        type: integer
      metroName:
        type: string
      metroBranchId:
        format: int32
        type: integer
      isShowMap:
        type: boolean
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      distanceText:
        type: string
      date:
        format: date-time
        type: string
      addDate:
        format: date-time
        type: string
      hot:
        type: boolean
      anonymous:
        type: boolean
      listTag:
        type: array
        items:
          $ref: '#/definitions/VacancyTag'
      searchTags:
        type: array
        items:
          $ref: '#/definitions/SynonymousDto'
      companyName:
        type: string
      isShowMiniProf:
        type: boolean
      isEnableImage:
        type: boolean
      images:
        type: array
        items:
          $ref: '#/definitions/VacancyImageDto'
      salary:
        format: int32
        type: integer
      salaryComment:
        type: string
      profLevelId:
        format: int32
        type: integer
      scheduleId:
        format: int32
        type: integer
      isAgency:
        type: boolean
      vacancyAddress:
        type: string
      showProfile:
        type: boolean
      showLogo:
        type: boolean
      logo:
        type: string
      designTypeId:
        enum:
          - All
          - Standard
          - Custom
          - Regional
          - Free
          - Anonymous
          - Base
          - Test
        type: string
      designBannerUrl:
        type: string
      description:
        type: string
      shortDescription:
        type: string
      dateTxt:
        type: string
      isSpecialNeeds:
        type: boolean
      isNew:
        type: boolean
      contactPerson:
        type: string
      contactPhone:
        type: string
      contactUrl:
        type: string
      branchId:
        format: int32
        type: integer
      branchName:
        type: string
      isLiked:
        type: boolean
      oblastId:
        format: int32
        type: integer
      languages:
        type: array
        items:
          $ref: '#/definitions/VacancyLanguageDto'
      formApplyCustomUrl:
        type: string
      isApply:
        type: boolean
      applyDate:
        format: date-time
        type: string
      noCvApply:
        type: boolean
      isActive:
        type: boolean
      verifiedCompany:
        type: boolean
      clusters:
        type: array
        items:
          $ref: '#/definitions/ClusterDto'
  VacancyTag:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      languageId:
        format: int32
        type: integer
  SynonymousDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      synonymGroupId:
        format: int32
        type: integer
      rate:
        format: int32
        type: integer
      vacancySearchCount:
        format: int32
        type: integer
  VacancyImageDto:
    type: object
    properties:
      url:
        type: string
      description:
        type: string
  VacancyLanguageDto:
    type: object
    properties:
      levelId:
        format: int32
        type: integer
      languageId:
        format: int32
        type: integer
      description:
        type: string
  ClusterDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/SynonymGroupDto'
  SynonymGroupDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  VacancySearchRecommendationRequest:
    description: >-
      Describes request for recommended vacancies for specific user (based on
      city and keywords)
    type: object
    properties:
      start:
        format: int32
        description: From which vacancy number return recommendation list
        maximum: 2147483647
        minimum: 0
        type: integer
      count:
        format: int32
        description: >-
          How many vacancies to take from the top of the recommendation result
          list
        maximum: 2147483647
        minimum: 0
        type: integer
      guid:
        description: "User id (if not specified, than current user id is taken).\r\nBased on this, City and KeyWords are taken for search."
        type: string
  ApplicationHistoryResponse:
    type: object
    properties:
      total:
        format: int32
        type: integer
      documents:
        type: array
        items:
          $ref: '#/definitions/ApplyInfo'
  ApplyInfo:
    type: object
    properties:
      vacancyId:
        format: int32
        type: integer
      vacancyName:
        type: string
      companyName:
        type: string
      cityId:
        format: int32
        type: integer
      resumeName:
        type: string
      isViewed:
        type: boolean
      dateView:
        format: date-time
        type: string
      invited:
        type: boolean
      declined:
        type: boolean
      state:
        enum:
          - All
          - NotPublicated
          - Publicated
          - Suspend
          - Closed
          - Deleted
          - Waiting
          - WaitingForAdmin
          - BannedByAdmin
          - Banned
        type: string
      notebookId:
        format: int32
        type: integer
      salary:
        format: int32
        type: integer
      resumeId:
        format: int32
        type: integer
      applyDate:
        format: date-time
        type: string
      letter:
        type: string
      file:
        type: string
      logo:
        type: string
      applyId:
        format: int32
        type: integer
      parentApplyId:
        format: int32
        type: integer
      status:
        $ref: '#/definitions/ApplicationStatusResult'
  ApplicationStatusResult:
    type: object
    properties:
      salary:
        type: array
        items:
          format: int32
          type: integer
      experience:
        type: array
        items:
          format: int32
          type: integer
      complete:
        type: boolean
      salaryId:
        format: int32
        type: integer
      experienceId:
        format: int32
        type: integer
  ResumeViewResponse:
    type: object
    properties:
      total:
        format: int32
        type: integer
      documents:
        type: array
        items:
          $ref: '#/definitions/ResumeViewInfo'
  ResumeViewInfo:
    type: object
    properties:
      resumeId:
        format: int32
        type: integer
      notebookId:
        format: int32
        type: integer
      branchName:
        type: string
      companyName:
        type: string
      companyLogo:
        type: string
      speciality:
        type: string
      reviewDate:
        format: date-time
        type: string
  ApplicationStatusItem:
    type: object
    properties:
      vacancyId:
        format: int32
        type: integer
      salaryId:
        format: int32
        type: integer
      experienceId:
        format: int32
        type: integer
      applyId:
        format: int32
        type: integer
      attach:
        type: boolean
  WishesPoolResult:
    type: object
    properties:
      pool:
        type: array
        items:
          $ref: '#/definitions/WishesPoolItem'
        readOnly: true
      experience:
        type: array
        items:
          $ref: '#/definitions/DataLocalized'
        readOnly: true
      salary:
        type: array
        items:
          $ref: '#/definitions/DataLocalized'
        readOnly: true
  WishesPoolItem:
    type: object
    properties:
      experienceId:
        format: int32
        type: integer
      salaryId:
        format: int32
        type: integer
      count:
        format: int32
        type: integer
      percent:
        format: int32
        type: integer
  DataLocalized:
    type: object
    properties:
      id:
        format: int32
        type: integer
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  ResumeListItemDTO:
    type: object
    properties:
      resumeId:
        format: int32
        type: integer
      name:
        type: string
      cityName:
        type: string
      photo:
        type: string
      stateId:
        format: int32
        type: integer
      isAnonymous:
        type: boolean
      speciality:
        type: string
      addDate:
        format: date-time
        type: string
      salary:
        format: int32
        type: integer
      currencyId:
        format: int32
        type: integer
      activeLevelId:
        enum:
          - None
          - Public
          - OnlyForVerifiedEmployer
          - Hide
          - ExceptEmployers
          - StrongDefinedEmployer
          - MegaEmployer
        type: string
      searchState:
        enum:
          - None
          - Active
          - NowWorking
        type: string
      isBannedByModerator:
        type: boolean
      countShown:
        format: int32
        type: integer
      hasEnoughInfoForApply:
        type: boolean
      phone:
        type: string
      isPhoneConfirmed:
        type: boolean
  AttachInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      fileName:
        type: string
      path:
        type: string
      notebookId:
        format: int32
        type: integer
      lastSentDate:
        format: date-time
        type: string
      email:
        type: string
  ActivePeriodInfo:
    type: object
    properties:
      startDate:
        format: date-time
        type: string
      applicationsCount:
        format: int32
        type: integer
  VacancyMailingSubscription:
    type: object
    properties:
      id:
        format: int32
        type: integer
      title:
        type: string
      addDate:
        format: date-time
        type: string
      isActive:
        type: boolean
      cityName:
        type: string
      isCreatedManually:
        type: boolean
  NotificationMailingSubscription:
    type: object
    properties:
      title:
        type: string
      type:
        enum:
          - BestArticlesFromBlogRabotaUa
          - DigestFromBlogRabotaUa
          - LettersFromPartners
          - NewsInMyProfession
          - ResumeViewNotification
          - ResumeViewsStatistics
          - WeeklyRecommendedVacanciesDigest
          - BestPropositionsOnMarket
          - VacanciesThatAreGoingToBeClosed
          - RelevanceOfViewedVacancies
          - SelectedVacanciesWithoutApply
          - ClosingVacanciesWithYourApplies
        type: string
      isActive:
        type: boolean
  AlertInfo:
    type: object
    properties:
      alertId:
        format: int32
        type: integer
      name:
        type: string
      keywords:
        type: string
      pzIdsName:
        type: string
      cityId:
        format: int32
        type: integer
      rubricId:
        format: int32
        type: integer
  AlertUpdateInfo:
    type: object
    properties:
      alertId:
        format: int32
        type: integer
      keywords:
        type: string
      cityId:
        format: int32
        type: integer
      rubricId:
        format: int32
        type: integer
  SubscribeCompetitorInfo:
    type: object
    properties:
      alertId:
        format: int32
        type: integer
      name:
        type: string
      bareKeywords:
        type: string
      keywords:
        type: string
      cityId:
        format: int32
        type: integer
      rubricId:
        format: int32
        type: integer
      sourceType:
        format: int32
        type: integer
      companyNotebookId:
        format: int32
        type: integer
      companyName:
        type: string
        readOnly: true
  VacancySearchUserResponse:
    type: object
    properties:
      took:
        format: int32
        type: integer
      start:
        format: int32
        type: integer
      count:
        format: int32
        type: integer
      total:
        format: int64
        type: integer
      hasGeoCount:
        format: int32
        type: integer
      errorMessage:
        type: string
      documents:
        type: array
        items:
          $ref: '#/definitions/VacancyShortDto'
  VacancyShortDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      logo:
        type: string
      designBannerUrl:
        type: string
      designBannerFullUrl:
        type: string
      publicationType:
        enum:
          - Undefined
          - Optimum
          - Proffessional
          - Test
          - Anonymous
          - Bussines
        type: string
      date:
        format: date-time
        type: string
      dateTxt:
        type: string
      hot:
        type: boolean
      salary:
        format: int32
        type: integer
      salaryFrom:
        format: int32
        type: integer
      salaryTo:
        format: int32
        type: integer
      salaryComment:
        type: string
      cityName:
        type: string
      cityId:
        format: int32
        type: integer
      metroName:
        type: string
      metroId:
        format: int32
        type: integer
      districtName:
        type: string
      districtId:
        format: int32
        type: integer
      notebookId:
        format: int32
        type: integer
      companyName:
        type: string
      formApplyCustomUrl:
        type: string
      isLiked:
        type: boolean
      isApply:
        type: boolean
      applyDate:
        format: date-time
        type: string
      lastViewDate:
        format: date-time
        type: string
      distanceText:
        type: string
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      shortDescription:
        type: string
      badges:
        type: array
        items:
          $ref: '#/definitions/VacancyBadgeDto'
  VacancyBadgeDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  CompanyHint:
    type: object
    properties:
      notebookId:
        format: int32
        type: integer
      logo:
        type: string
      companyName:
        type: string
      branchId:
        format: int32
        type: integer
      employeeCountId:
        format: int32
        type: integer
      companySite:
        type: string
      branchName:
        type: string
  CityDataLocalized:
    type: object
    properties:
      centerId:
        format: int32
        type: integer
      centerName:
        type: string
      regionName:
        $ref: '#/definitions/RegionName'
      vacancyCount:
        format: int32
        type: integer
      locativeName:
        $ref: '#/definitions/LocativeName'
      id:
        format: int32
        type: integer
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  RegionName:
    type: object
    properties:
      ua:
        type: string
      ru:
        type: string
  LocativeName:
    type: object
    properties:
      ua:
        type: string
      ru:
        type: string
  SendSmsResponse:
    type: object
    properties:
      result:
        $ref: '#/definitions/SendSmsResult'
  SendSmsResult:
    type: object
    properties:
      error:
        enum:
          - NoErrors
          - NotEnoughMoney
          - PhoneAlreadyConfirmed
          - SmsLimitReached
          - SendErrors
        type: string
        readOnly: true
      errorDescription:
        type: string
        readOnly: true
  CompanyInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      logo:
        type: string
      site:
        type: string
      description:
        type: string
      countEmployeeId:
        format: int32
        type: integer
      verified:
        type: boolean
      hasMobileDesign:
        type: boolean
      facebookLink:
        type: string
      instagramLink:
        type: string
      linkedInLink:
        type: string
      fullAddress:
        type: string
  UpdateCompanyRequest:
    type: object
    properties:
      facebookLink:
        type: string
  CompanyMiniProfileDto:
    type: object
    properties:
      isEnabled:
        type: boolean
      info:
        $ref: '#/definitions/InfoDto'
  InfoDto:
    type: object
    properties:
      description:
        type: string
      years:
        format: int32
        type: integer
      employeeCountId:
        format: int32
        type: integer
      benefits:
        type: array
        items:
          $ref: '#/definitions/BenefitDto'
      images:
        type: array
        items:
          type: string
  BenefitDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  CompanyVacanciesResponse:
    type: object
    properties:
      cityIdsWhereVacanciesPublished:
        type: array
        items:
          format: int32
          type: integer
      rubricIdsWhereVacanciesPublished:
        type: array
        items:
          format: int32
          type: integer
      filteredVacancies:
        type: array
        items:
          $ref: '#/definitions/CompanyVacancyDto'
      totalVacanciesCount:
        format: int32
        type: integer
  CompanyVacancyDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      date:
        format: date-time
        type: string
      dateTxt:
        type: string
      salary:
        format: int32
        type: integer
      cityId:
        format: int32
        type: integer
      isHot:
        type: boolean
      description:
        type: string
      formApplyCustomUrl:
        type: string
  FullCompanyCustomDesignResponse:
    type: object
    properties:
      markup:
        type: string
      coverUrl:
        type: string
      logoUrl:
        type: string
      isEnoughDataPresent:
        type: boolean
        readOnly: true
      canShow:
        type: boolean
  CompanyAdditionalPage:
    type: object
    properties:
      title:
        type: string
      link:
        type: string
      design:
        type: string
      order:
        format: int32
        type: integer
  CompanyInRubricDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      logoUrl:
        type: string
  FilteredCompanies:
    type: object
    properties:
      companies:
        type: array
        items:
          $ref: '#/definitions/CompanyVipInfo'
      total:
        format: int32
        type: integer
  CompanyVipInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      description:
        type: string
      logo:
        type: string
      vacancyCount:
        format: int32
        type: integer
      isPaidCVDB:
        type: boolean
      isPremium:
        type: boolean
  ResourceLocalized:
    type: object
    properties:
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  MetroBranchDataLocalized:
    type: object
    properties:
      stations:
        type: array
        items:
          $ref: '#/definitions/DataLocalized'
      id:
        format: int32
        type: integer
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  LanguageDataLocalized:
    type: object
    properties:
      popular:
        type: boolean
      id:
        format: int32
        type: integer
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  PopularTagInfo:
    type: object
    properties:
      count:
        format: int32
        type: integer
      id:
        format: int32
        type: integer
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  FcmToken:
    required:
      - token
    type: object
    properties:
      token:
        type: string
      email:
        type: string
      cid:
        type: string
  EducationInfoDTO:
    type: object
    properties:
      id:
        format: int32
        type: integer
      typeId:
        enum:
          - Higher
          - UnfinishedHigher
          - SecondarySpecial
          - Secondary
          - MBA
        type: string
      schoolName:
        type: string
      location:
        type: string
      speciality:
        type: string
      year:
        format: int32
        type: integer
      diploma:
        type: string
      resumeId:
        format: int32
        type: integer
  CvStateInfo:
    type: object
    properties:
      level:
        enum:
          - None
          - Public
          - OnlyForVerifiedEmployer
          - Hide
          - ExceptEmployers
          - StrongDefinedEmployer
          - MegaEmployer
        type: string
      anonymous:
        type: boolean
      branchIds:
        type: array
        items:
          format: int32
          type: integer
      companyIds:
        type: array
        items:
          format: int32
          type: integer
      viewCount:
        format: int32
        type: integer
      banReason:
        type: array
        items:
          $ref: '#/definitions/BanReasonInfo'
      active:
        type: boolean
      isDeleted:
        type: boolean
      ukrainian:
        type: boolean
      resumeId:
        format: int32
        type: integer
  BanReasonInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      text:
        type: string
      text2:
        type: string
      text3:
        type: string
      text2Ukr:
        type: string
      text3Ukr:
        type: string
  PersonalInfoDTO:
    required:
      - name
      - surName
      - dateBirth
      - cityId
    type: object
    properties:
      name:
        type: string
      middleName:
        type: string
      surName:
        type: string
      dateBirth:
        format: date-time
        type: string
      gender:
        format: int32
        type: integer
      cityId:
        format: int32
        type: integer
      moving:
        type: array
        items:
          format: int32
          type: integer
      districtIds:
        type: array
        items:
          format: int32
          type: integer
      resumeId:
        format: int32
        type: integer
  LanguageAbilityInfoDTO:
    type: object
    properties:
      languageId:
        format: int32
        type: integer
      skillsLevel:
        format: int32
        type: integer
      isCanBeInterviewed:
        type: boolean
      skillName:
        type: string
      languageName:
        type: string
      certificate:
        type: string
      resumeId:
        format: int32
        type: integer
  PositionInfoDTO:
    type: object
    properties:
      position:
        type: string
      scheduleId:
        format: int32
        type: integer
      scheduleIds:
        type: array
        items:
          format: int32
          type: integer
      salary:
        format: int32
        maximum: 600000
        minimum: 0
        type: integer
      currencyId:
        format: int32
        description: 1 - uah, 2 - usd
        maximum: 2
        minimum: 1
        type: integer
      rubrics:
        type: array
        items:
          $ref: '#/definitions/RubricLocalized'
      resumeId:
        format: int32
        type: integer
  RubricLocalized:
    type: object
    properties:
      parentId:
        format: int32
        type: integer
      experienceId:
        format: int32
        type: integer
      vacCount:
        format: int32
        type: integer
      id:
        format: int32
        type: integer
      ru:
        type: string
      ua:
        type: string
      en:
        type: string
  ScheduleInfoDTO:
    required:
      - scheduleIds
    type: object
    properties:
      scheduleIds:
        type: array
        items:
          format: int32
          type: integer
      resumeId:
        format: int32
        type: integer
  ExperienceInfoDTO:
    type: object
    properties:
      startWork:
        format: date-time
        type: string
      endWork:
        format: date-time
        type: string
      id:
        format: int32
        type: integer
      branchId:
        format: int32
        type: integer
      notebookCompanyId:
        format: int32
        type: integer
      position:
        type: string
      company:
        type: string
      description:
        type: string
      period:
        type: string
        readOnly: true
      recommendationList:
        type: array
        items:
          $ref: '#/definitions/RecommendationInfoDTO'
      resumeId:
        format: int32
        type: integer
  RecommendationInfoDTO:
    type: object
    properties:
      id:
        format: int32
        type: integer
      experienceId:
        format: int32
        type: integer
      name:
        type: string
      position:
        type: string
      companyName:
        type: string
      phone:
        type: string
      email:
        pattern: ^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
        type: string
      atRequest:
        type: boolean
      resumeId:
        format: int32
        type: integer
  ResumeShortListItemDTO:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      level:
        enum:
          - None
          - Public
          - OnlyForVerifiedEmployer
          - Hide
          - ExceptEmployers
          - StrongDefinedEmployer
          - MegaEmployer
        type: string
      hasEnoughInfoForApply:
        type: boolean
      lastApplyDate:
        format: date-time
        type: string
  ResumeShortInfoDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      level:
        enum:
          - None
          - Public
          - OnlyForVerifiedEmployer
          - Hide
          - ExceptEmployers
          - StrongDefinedEmployer
          - MegaEmployer
        type: string
  ResumeModel:
    type: object
    properties:
      additionals:
        type: array
        items:
          $ref: '#/definitions/AdditionalInfoDTO'
      contact:
        $ref: '#/definitions/ContactInfoDTO'
      educations:
        type: array
        items:
          $ref: '#/definitions/EducationInfoDTO'
      experiences:
        type: array
        items:
          $ref: '#/definitions/ExperienceInfoDTO'
      languages:
        type: array
        items:
          $ref: '#/definitions/LanguageAbilityInfo'
      personal:
        $ref: '#/definitions/PersonalInfo'
      photo:
        type: string
      position:
        $ref: '#/definitions/PositionInfoDTO'
      skill:
        $ref: '#/definitions/SkillInfoDTO'
      state:
        $ref: '#/definitions/CvStateInfo'
      trainings:
        type: array
        items:
          $ref: '#/definitions/TrainingInfoDTO'
      uiLanguage:
        enum:
          - None
          - Russian
          - English
          - Ukrainian
        type: string
      searchState:
        enum:
          - None
          - Active
          - NowWorking
        type: string
      updateDate:
        format: date-time
        type: string
      rtfLink:
        type: string
      viewLink:
        type: string
      resumeCount:
        format: int32
        type: integer
      diiaCertificate:
        type: string
      resumeId:
        format: int32
        type: integer
  AdditionalInfoDTO:
    required:
      - title
      - description
    type: object
    properties:
      id:
        format: int32
        type: integer
      title:
        type: string
      description:
        type: string
      resumeId:
        format: int32
        type: integer
  ContactInfoDTO:
    required:
      - email
    type: object
    properties:
      email:
        pattern: ^[\w-]+[_\.\-\w]*@\w+([\.-]?\w+)*(\.\w{2,12})+$
        type: string
      isPhoneConfirmed:
        type: boolean
      phone:
        type: string
      skype:
        type: string
      additionalPhones:
        type: array
        items:
          type: string
      portfolio:
        type: array
        items:
          type: string
      socialNetworks:
        type: array
        items:
          $ref: '#/definitions/ResumeContactDTO'
      resumeId:
        format: int32
        type: integer
  LanguageAbilityInfo:
    type: object
    properties:
      languageId:
        format: int32
        type: integer
      skillsLevel:
        format: int32
        type: integer
      skillName:
        type: string
      languageName:
        type: string
      certificate:
        type: string
      isCanBeInterviewed:
        type: boolean
      resumeId:
        format: int32
        type: integer
  PersonalInfo:
    type: object
    properties:
      name:
        type: string
      middleName:
        type: string
      surName:
        type: string
      dateBirth:
        format: date-time
        type: string
      gender:
        format: int32
        type: integer
      cityId:
        format: int32
        type: integer
      moving:
        type: array
        items:
          format: int32
          type: integer
      districtIds:
        type: array
        items:
          format: int32
          type: integer
      resumeId:
        format: int32
        type: integer
  SkillInfoDTO:
    required:
      - text
    type: object
    properties:
      text:
        type: string
      resumeId:
        format: int32
        type: integer
  TrainingInfoDTO:
    required:
      - name
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      location:
        type: string
      description:
        type: string
      year:
        format: int32
        type: integer
      resumeId:
        format: int32
        type: integer
  ResumeContactDTO:
    required:
      - text
    type: object
    properties:
      type:
        enum:
          - Phone
          - Portfolio
          - SocialNetwork
        type: string
      subType:
        enum:
          - none
          - linkedin
          - facebook
          - vk
          - twitter
          - googleplus
          - ok
        type: string
      text:
        type: string
  DiiaCertificateInfoDTO:
    type: object
    properties:
      diiaCertificate:
        type: string
      resumeId:
        format: int32
        type: integer
  VacancySearchRequest:
    type: object
    properties:
      uid:
        format: int32
        type: integer
      cid:
        type: string
      page:
        format: int32
        type: integer
      count:
        format: int32
        type: integer
      ukrainian:
        type: boolean
      cityId:
        format: int32
        type: integer
      metroIds:
        type: array
        items:
          format: int32
          type: integer
      districtIds:
        type: array
        items:
          format: int32
          type: integer
      parentId:
        format: int32
        type: integer
      rubricIds:
        type: array
        items:
          format: int32
          type: integer
      keyWords:
        type: string
      additionalKeywords:
        type: array
        items:
          type: string
      salary:
        format: int32
        type: integer
      noSalary:
        type: boolean
      showAgency:
        type: boolean
      lastViewDate:
        type: boolean
      scheduleId:
        format: int32
        type: integer
      profLevelIds:
        type: array
        items:
          format: int32
          type: integer
      isSynonym:
        type: boolean
      period:
        format: int32
        type: integer
      nearRegions:
        type: boolean
      searchMode:
        format: int32
        type: integer
      sortBy:
        enum:
          - Date
          - Geo
        type: string
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      viewedVacancyIds:
        type: array
        items:
          format: int32
          type: integer
  VacancyGetRequest:
    type: object
    properties:
      id:
        format: int32
        type: integer
      ukrainian:
        type: boolean
      isFromElasticSearch:
        type: boolean
      cid:
        type: string
  VacancyFullDto:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      logo:
        type: string
      designBannerUrl:
        type: string
      designBannerFullUrl:
        type: string
      notebookId:
        format: int32
        type: integer
      companyName:
        type: string
      verifiedCompany:
        type: boolean
      contactPerson:
        type: string
      contactPhoto:
        type: string
      contactPhone:
        type: string
      contactUrl:
        type: string
      contactURL:
        type: string
      socials:
        type: array
        items:
          type: string
      date:
        format: date-time
        type: string
      dateTxt:
        type: string
      isActive:
        type: boolean
      isLiked:
        type: boolean
      isAgency:
        type: boolean
      noCvApply:
        type: boolean
      isApply:
        type: boolean
      applyDate:
        format: date-time
        type: string
      isApplyViewed:
        type: boolean
      isEnableImage:
        type: boolean
      isShowMiniProf:
        type: boolean
      salary:
        format: int32
        type: integer
      salaryFrom:
        format: int32
        type: integer
      salaryTo:
        format: int32
        type: integer
      salaryComment:
        type: string
      hot:
        type: boolean
      formApplyCustomUrl:
        type: string
      description:
        type: string
      branchId:
        format: int32
        type: integer
      branchName:
        type: string
      cityId:
        format: int32
        type: integer
      cityName:
        type: string
      vacancyAddress:
        type: string
      districtId:
        format: int32
        type: integer
      districtName:
        type: string
      metroId:
        format: int32
        type: integer
      metroName:
        type: string
      metroBranchId:
        format: int32
        type: integer
      isShowMap:
        type: boolean
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      publicationType:
        enum:
          - Undefined
          - Optimum
          - Proffessional
          - Test
          - Anonymous
          - Bussines
        type: string
      customDesign:
        $ref: '#/definitions/VacancyCustomDesignV2'
      profLevelId:
        format: int32
        type: integer
      scheduleId:
        format: int32
        type: integer
      dataSource:
        enum:
          - Database
          - Elastic
        type: string
      languages:
        type: array
        items:
          $ref: '#/definitions/VacancyLanguageDto'
      images:
        type: array
        items:
          $ref: '#/definitions/VacancyMediaItemDto'
      mediaItems:
        type: array
        items:
          $ref: '#/definitions/VacancyMediaItemDto'
      searchTags:
        type: array
        items:
          $ref: '#/definitions/SynonymousDto'
      clusters:
        type: array
        items:
          $ref: '#/definitions/ClusterDto'
      badges:
        type: array
        items:
          $ref: '#/definitions/VacancyBadgeDto'
      candidatesScreeningOptions:
        $ref: '#/definitions/CandidatesScreeningOptionsDto'
  VacancyCustomDesignV2:
    type: object
    properties:
      headerInfo:
        $ref: '#/definitions/VacancyCustomHeader'
      footerInfo:
        $ref: '#/definitions/VacancyCustomFooter'
      backgroundHtml:
        type: string
  VacancyMediaItemDto:
    type: object
    properties:
      url:
        type: string
      type:
        enum:
          - UploadedImage
          - YoutubeVideo
        type: string
      description:
        type: string
  CandidatesScreeningOptionsDto:
    type: object
    properties:
      questionnaireId:
        type: string
      isEnabled:
        type: boolean
  VacancyCustomHeader:
    type: object
    properties:
      mediaItems:
        type: array
        items:
          $ref: '#/definitions/VacancyCustomHeaderItem'
      videoPlayButtonImageUrl:
        type: string
  VacancyCustomFooter:
    type: object
    properties:
      imageUrl:
        type: string
  VacancyCustomHeaderItem:
    type: object
    properties:
      url:
        type: string
      videoCoverImageUrl:
        type: string
      type:
        enum:
          - Image
          - YouTubeVideo
        type: string
  QuestionInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      templateId:
        format: int32
        type: integer
      languageId:
        format: int32
        type: integer
      languageName:
        type: string
      vacancyId:
        format: int32
        type: integer
      importance:
        format: int32
        type: integer
      notTemplateType:
        format: int32
        type: integer
      isDeleted:
        type: boolean
      detailList:
        type: array
        items:
          $ref: '#/definitions/QuestionDetailInfo'
      rightAnswers:
        type: string
      rightPositions:
        type: string
        readOnly: true
  QuestionDetailInfo:
    type: object
    properties:
      isRight:
        type: boolean
      id:
        format: int32
        type: integer
      questionId:
        format: int32
        type: integer
      control:
        format: int32
        type: integer
      position:
        format: int32
        type: integer
      percentage:
        format: int32
        type: integer
      name:
        type: string
      isSelected:
        type: boolean
      importance:
        format: int32
        type: integer
      requiredAnswer:
        type: string
      htmlValue:
        type: string
  SynonymousInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      synonymousId:
        format: int32
        type: integer
      rate:
        format: int32
        type: integer
      name:
        type: string
      show:
        type: boolean
      showCategorizator:
        type: boolean
      rubricText:
        type: string
      cyrKey:
        type: string
        readOnly: true
      isShowSeoUrl:
        type: boolean
      rubricId:
        format: int32
        type: integer
      cityId:
        format: int32
        type: integer
      subRubricId:
        format: int32
        type: integer
      maxRate:
        type: boolean
      mode:
        format: int32
        type: integer
      seoRubricIds:
        type: string
        readOnly: true
      seoRubricId:
        format: int32
        type: integer
      groupName:
        type: string
      incomplete:
        type: boolean
      positionTag:
        type: boolean
      tagType:
        enum:
          - None
          - Skill
          - Position
          - Mistake
          - Others
        type: string
      tagLanguage:
        enum:
          - None
          - English
          - Ukrainian
          - Russian
        type: string
      seoRubrics:
        type: array
        items:
          $ref: '#/definitions/DataInfo'
      mainUkrTag:
        type: boolean
      mainNonUkrTag:
        type: boolean
      seoRating:
        format: int32
        type: integer
      vacancyCountRating:
        format: int32
        type: integer
      searchCount:
        format: int32
        type: integer
      parentTagCityId:
        format: int32
        type: integer
  DataInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      count:
        format: int32
        type: integer
      data:
        type: string
      data2:
        type: string
      boolAttr:
        type: boolean
      nameUkr:
        type: string
      nameEng:
        type: string
      date:
        format: date-time
        type: string
  CityInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      nameLocative:
        type: string
      code:
        type: string
      primary:
        type: boolean
      popular:
        type: boolean
      parentId:
        format: int32
        type: integer
      vacancyCount:
        format: int32
        type: integer
      regionCenter:
        type: boolean
        readOnly: true
      nameLocativeUkr:
        type: string
      nameUkr:
        type: string
      nameEng:
        type: string
      prevName:
        type: string
      metroStationInfo:
        $ref: '#/definitions/MetroStationInfo'
      districtInfo:
        $ref: '#/definitions/DistrictInfo'
      urlName:
        type: string
        readOnly: true
  MetroStationInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      nameUkr:
        type: string
      branchId:
        format: int32
        type: integer
      branchName:
        type: string
      branchNameUkr:
        type: string
      cityId:
        format: int32
        type: integer
  DistrictInfo:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      nameUkr:
        type: string
      cityId:
        format: int32
        type: integer
  ApplyModel:
    description: Job apply model for logged users (for web-ste and attached CVs both)
    type: object
    properties:
      profCv:
        type: boolean
      hasCQ:
        type: boolean
      error:
        type: string
      phone:
        type: string
      cvId:
        format: int32
        type: integer
      clientId:
        type: string
      cQuestLang:
        type: array
        items:
          type: string
      cQuestExp:
        type: array
        items:
          type: string
      vacancyId:
        format: int32
        maximum: 2147483647
        minimum: 1
        type: integer
      letter:
        type: string
      addAlert:
        type: boolean
      recaptchaToken:
        type: string
      email:
        type: string
      name:
        type: string
      lastName:
        type: string
  ApplyResponse:
    type: object
    properties:
      success:
        type: boolean
      error:
        type: string
      userId:
        format: int32
        type: integer
      phoneId:
        format: int32
        type: integer
      applyId:
        format: int32
        type: integer
      transactionId:
        type: string
      isFirstApply:
        type: boolean
      fileName:
        type: string
  NoCvApplyRequest:
    required:
      - phone
      - name
    type: object
    properties:
      email:
        type: string
      phone:
        type: string
      name:
        type: string
      addAlert:
        type: boolean
      vacancyId:
        format: int32
        maximum: 2147483647
        minimum: 1
        type: integer
      clientId:
        type: string
      code:
        type: string
      recaptchaToken:
        type: string
  NoCvApplyResponse:
    type: object
    properties:
      id:
        format: int32
        type: integer
      applyId:
        format: int32
        type: integer
        readOnly: true
      companyId:
        format: int32
        type: integer
      blackList:
        type: boolean
      repeated:
        type: boolean
      url:
        type: string
      success:
        type: boolean
      error:
        type: string
      userId:
        format: int32
        type: integer
      phoneId:
        format: int32
        type: integer
      transactionId:
        type: string
      isFirstApply:
        type: boolean
      fileName:
        type: string
  SimilarVacanciesRequest:
    type: object
    properties:
      cityId:
        format: int32
        type: integer
      count:
        format: int32
        type: integer
      keywords:
        type: array
        items:
          type: string
      isHotOnly:
        type: boolean
      vacancyId:
        format: int32
        type: integer
  SimilarVacanciesResponse:
    type: object
    properties:
      vacancyName:
        type: string
      salary:
        type: string
      notebookId:
        format: int32
        type: integer
      id:
        format: int32
        type: integer
      companyName:
        type: string
      cityName:
        type: string
      cityId:
        format: int32
        type: integer
      logo:
        type: string
      salaryInt:
        format: int32
        type: integer
      date:
        format: date-time
        type: string
      isHot:
        type: boolean
      dateTxt:
        type: string
securityDefinitions:
  Bearer:
    type: apiKey
    description: 'Get JWT token from Auth API and paste it like: "<b>Bearer {token}</b>"'
    name: Authorization
    in: header
